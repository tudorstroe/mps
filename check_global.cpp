#include <bits/stdc++.h>
#include <experimental/filesystem>

using namespace std;
using recursive_directory_iterator = std::experimental::filesystem::recursive_directory_iterator;

const int no_thresholds = 15;
const int no_f_measure = 256;
const int no_levels = 4;

double get_score(double threshold, const double* f_measure) {
    if (f_measure[(int)(threshold * 255.0)] > 100){
        return 0;
    }
    return f_measure[(int)(threshold * 255.0)];
}

recursive_directory_iterator get_directory() {
    return recursive_directory_iterator(std::experimental::filesystem::current_path().string() + "/mps-global/MPS-Global");
}

void read_data_from_file(string& filePath, double* thresholds, double* f_measure) {
    ifstream f(filePath);

    char dump_char;
    for (int i = 0; i <= no_thresholds; i++) {
        f >> thresholds[i] >> dump_char;
    }
    for (int i = 1; i <= no_f_measure; i++) {
        f >> f_measure[i] >> dump_char;
    }
}

double get_global(const double* original_thresholds);

int main() {
    srand(time(0));
    auto directory = get_directory();
    int number_of_files = 0;

    for (auto& file : directory) {
        ++number_of_files;
    }
    directory = get_directory();

    int index = 0;

    auto** thresholds = new double*[number_of_files];
    auto** f_measure = new double*[number_of_files];

    for (auto& file : directory) {
        string filePath = file.path().string();

        thresholds[index] = new double[no_thresholds + 1];
        f_measure[index] = new double[no_f_measure + 1];

        read_data_from_file(filePath, thresholds[index], f_measure[index]);

        ++index;
    }

    double score = 0;
    for (int i = 0; i < number_of_files; ++i) {
        double threshold = get_global(thresholds[i] + 1);
        score += get_score(threshold, f_measure[i]);
    }

    score /= (1.0 * number_of_files);

    cout << "\nScore for global: " << score << '\n';

    return 0;
}double get_global(const double* original_thresholds) {
    int no_levels = 4, no_thresholds = 15;
    vector<int>** levels;
    levels = new vector<int>*[no_levels];

    for (int i = 0; i < no_levels; ++i) {
        levels[i] = new vector<int>[no_thresholds + 1];
        for (int j = 0; j <= no_thresholds; ++j) {
            for (int k = 0; k < no_thresholds; ++k) {
                levels[i][j].push_back(0);
            }
        }
    }
    levels[0][1][0] = 2;
    levels[0][1][1] = 3;
    levels[0][1][2] = 6;
    levels[0][1][3] = 9;
    levels[0][1][4] = 13;
    levels[0][1][5] = 0;
    levels[0][1][6] = 0;
    levels[0][1][7] = 0;
    levels[0][1][8] = 0;
    levels[0][1][9] = 0;
    levels[0][1][10] = 0;
    levels[0][1][11] = 0;
    levels[0][1][12] = 0;
    levels[0][1][13] = 0;
    levels[0][1][14] = 0;
    levels[0][2][0] = 1;
    levels[0][2][1] = 5;
    levels[0][2][2] = 8;
    levels[0][2][3] = 10;
    levels[0][2][4] = 13;
    levels[0][2][5] = 14;
    levels[0][2][6] = 0;
    levels[0][2][7] = 0;
    levels[0][2][8] = 0;
    levels[0][2][9] = 0;
    levels[0][2][10] = 0;
    levels[0][2][11] = 0;
    levels[0][2][12] = 0;
    levels[0][2][13] = 0;
    levels[0][2][14] = 0;
    levels[0][3][0] = 1;
    levels[0][3][1] = 3;
    levels[0][3][2] = 4;
    levels[0][3][3] = 8;
    levels[0][3][4] = 10;
    levels[0][3][5] = 12;
    levels[0][3][6] = 0;
    levels[0][3][7] = 0;
    levels[0][3][8] = 0;
    levels[0][3][9] = 0;
    levels[0][3][10] = 0;
    levels[0][3][11] = 0;
    levels[0][3][12] = 0;
    levels[0][3][13] = 0;
    levels[0][3][14] = 0;
    levels[0][4][0] = 3;
    levels[0][4][1] = 6;
    levels[0][4][2] = 8;
    levels[0][4][3] = 10;
    levels[0][4][4] = 14;
    levels[0][4][5] = 15;
    levels[0][4][6] = 0;
    levels[0][4][7] = 0;
    levels[0][4][8] = 0;
    levels[0][4][9] = 0;
    levels[0][4][10] = 0;
    levels[0][4][11] = 0;
    levels[0][4][12] = 0;
    levels[0][4][13] = 0;
    levels[0][4][14] = 0;
    levels[0][5][0] = 1;
    levels[0][5][1] = 4;
    levels[0][5][2] = 6;
    levels[0][5][3] = 9;
    levels[0][5][4] = 13;
    levels[0][5][5] = 0;
    levels[0][5][6] = 0;
    levels[0][5][7] = 0;
    levels[0][5][8] = 0;
    levels[0][5][9] = 0;
    levels[0][5][10] = 0;
    levels[0][5][11] = 0;
    levels[0][5][12] = 0;
    levels[0][5][13] = 0;
    levels[0][5][14] = 0;
    levels[0][6][0] = 1;
    levels[0][6][1] = 3;
    levels[0][6][2] = 4;
    levels[0][6][3] = 5;
    levels[0][6][4] = 7;
    levels[0][6][5] = 11;
    levels[0][6][6] = 14;
    levels[0][6][7] = 0;
    levels[0][6][8] = 0;
    levels[0][6][9] = 0;
    levels[0][6][10] = 0;
    levels[0][6][11] = 0;
    levels[0][6][12] = 0;
    levels[0][6][13] = 0;
    levels[0][6][14] = 0;
    levels[0][7][0] = 2;
    levels[0][7][1] = 4;
    levels[0][7][2] = 7;
    levels[0][7][3] = 9;
    levels[0][7][4] = 12;
    levels[0][7][5] = 15;
    levels[0][7][6] = 0;
    levels[0][7][7] = 0;
    levels[0][7][8] = 0;
    levels[0][7][9] = 0;
    levels[0][7][10] = 0;
    levels[0][7][11] = 0;
    levels[0][7][12] = 0;
    levels[0][7][13] = 0;
    levels[0][7][14] = 0;
    levels[0][8][0] = 4;
    levels[0][8][1] = 8;
    levels[0][8][2] = 9;
    levels[0][8][3] = 12;
    levels[0][8][4] = 14;
    levels[0][8][5] = 0;
    levels[0][8][6] = 0;
    levels[0][8][7] = 0;
    levels[0][8][8] = 0;
    levels[0][8][9] = 0;
    levels[0][8][10] = 0;
    levels[0][8][11] = 0;
    levels[0][8][12] = 0;
    levels[0][8][13] = 0;
    levels[0][8][14] = 0;
    levels[0][9][0] = 4;
    levels[0][9][1] = 5;
    levels[0][9][2] = 7;
    levels[0][9][3] = 8;
    levels[0][9][4] = 9;
    levels[0][9][5] = 13;
    levels[0][9][6] = 15;
    levels[0][9][7] = 0;
    levels[0][9][8] = 0;
    levels[0][9][9] = 0;
    levels[0][9][10] = 0;
    levels[0][9][11] = 0;
    levels[0][9][12] = 0;
    levels[0][9][13] = 0;
    levels[0][9][14] = 0;
    levels[0][10][0] = 3;
    levels[0][10][1] = 6;
    levels[0][10][2] = 9;
    levels[0][10][3] = 13;
    levels[0][10][4] = 14;
    levels[0][10][5] = 0;
    levels[0][10][6] = 0;
    levels[0][10][7] = 0;
    levels[0][10][8] = 0;
    levels[0][10][9] = 0;
    levels[0][10][10] = 0;
    levels[0][10][11] = 0;
    levels[0][10][12] = 0;
    levels[0][10][13] = 0;
    levels[0][10][14] = 0;
    levels[0][11][0] = 2;
    levels[0][11][1] = 5;
    levels[0][11][2] = 7;
    levels[0][11][3] = 8;
    levels[0][11][4] = 12;
    levels[0][11][5] = 15;
    levels[0][11][6] = 0;
    levels[0][11][7] = 0;
    levels[0][11][8] = 0;
    levels[0][11][9] = 0;
    levels[0][11][10] = 0;
    levels[0][11][11] = 0;
    levels[0][11][12] = 0;
    levels[0][11][13] = 0;
    levels[0][11][14] = 0;
    levels[0][12][0] = 2;
    levels[0][12][1] = 3;
    levels[0][12][2] = 4;
    levels[0][12][3] = 6;
    levels[0][12][4] = 7;
    levels[0][12][5] = 11;
    levels[0][12][6] = 13;
    levels[0][12][7] = 14;
    levels[0][12][8] = 15;
    levels[0][12][9] = 0;
    levels[0][12][10] = 0;
    levels[0][12][11] = 0;
    levels[0][12][12] = 0;
    levels[0][12][13] = 0;
    levels[0][12][14] = 0;
    levels[0][13][0] = 2;
    levels[0][13][1] = 4;
    levels[0][13][2] = 8;
    levels[0][13][3] = 10;
    levels[0][13][4] = 12;
    levels[0][13][5] = 15;
    levels[0][13][6] = 0;
    levels[0][13][7] = 0;
    levels[0][13][8] = 0;
    levels[0][13][9] = 0;
    levels[0][13][10] = 0;
    levels[0][13][11] = 0;
    levels[0][13][12] = 0;
    levels[0][13][13] = 0;
    levels[0][13][14] = 0;
    levels[0][14][0] = 1;
    levels[0][14][1] = 2;
    levels[0][14][2] = 3;
    levels[0][14][3] = 6;
    levels[0][14][4] = 7;
    levels[0][14][5] = 10;
    levels[0][14][6] = 12;
    levels[0][14][7] = 14;
    levels[0][14][8] = 15;
    levels[0][14][9] = 0;
    levels[0][14][10] = 0;
    levels[0][14][11] = 0;
    levels[0][14][12] = 0;
    levels[0][14][13] = 0;
    levels[0][14][14] = 0;
    levels[0][15][0] = 2;
    levels[0][15][1] = 3;
    levels[0][15][2] = 5;
    levels[0][15][3] = 9;
    levels[0][15][4] = 11;
    levels[0][15][5] = 14;
    levels[0][15][6] = 0;
    levels[0][15][7] = 0;
    levels[0][15][8] = 0;
    levels[0][15][9] = 0;
    levels[0][15][10] = 0;
    levels[0][15][11] = 0;
    levels[0][15][12] = 0;
    levels[0][15][13] = 0;
    levels[0][15][14] = 0;
    levels[1][1][0] = 3;
    levels[1][1][1] = 6;
    levels[1][1][2] = 9;
    levels[1][1][3] = 10;
    levels[1][1][4] = 11;
    levels[1][1][5] = 14;
    levels[1][1][6] = 15;
    levels[1][1][7] = 0;
    levels[1][1][8] = 0;
    levels[1][1][9] = 0;
    levels[1][1][10] = 0;
    levels[1][1][11] = 0;
    levels[1][1][12] = 0;
    levels[1][1][13] = 0;
    levels[1][1][14] = 0;
    levels[1][2][0] = 4;
    levels[1][2][1] = 7;
    levels[1][2][2] = 10;
    levels[1][2][3] = 12;
    levels[1][2][4] = 13;
    levels[1][2][5] = 15;
    levels[1][2][6] = 0;
    levels[1][2][7] = 0;
    levels[1][2][8] = 0;
    levels[1][2][9] = 0;
    levels[1][2][10] = 0;
    levels[1][2][11] = 0;
    levels[1][2][12] = 0;
    levels[1][2][13] = 0;
    levels[1][2][14] = 0;
    levels[1][3][0] = 2;
    levels[1][3][1] = 3;
    levels[1][3][2] = 7;
    levels[1][3][3] = 9;
    levels[1][3][4] = 12;
    levels[1][3][5] = 14;
    levels[1][3][6] = 15;
    levels[1][3][7] = 0;
    levels[1][3][8] = 0;
    levels[1][3][9] = 0;
    levels[1][3][10] = 0;
    levels[1][3][11] = 0;
    levels[1][3][12] = 0;
    levels[1][3][13] = 0;
    levels[1][3][14] = 0;
    levels[1][4][0] = 1;
    levels[1][4][1] = 5;
    levels[1][4][2] = 9;
    levels[1][4][3] = 11;
    levels[1][4][4] = 14;
    levels[1][4][5] = 15;
    levels[1][4][6] = 0;
    levels[1][4][7] = 0;
    levels[1][4][8] = 0;
    levels[1][4][9] = 0;
    levels[1][4][10] = 0;
    levels[1][4][11] = 0;
    levels[1][4][12] = 0;
    levels[1][4][13] = 0;
    levels[1][4][14] = 0;
    levels[1][5][0] = 2;
    levels[1][5][1] = 5;
    levels[1][5][2] = 7;
    levels[1][5][3] = 11;
    levels[1][5][4] = 14;
    levels[1][5][5] = 0;
    levels[1][5][6] = 0;
    levels[1][5][7] = 0;
    levels[1][5][8] = 0;
    levels[1][5][9] = 0;
    levels[1][5][10] = 0;
    levels[1][5][11] = 0;
    levels[1][5][12] = 0;
    levels[1][5][13] = 0;
    levels[1][5][14] = 0;
    levels[1][6][0] = 2;
    levels[1][6][1] = 4;
    levels[1][6][2] = 7;
    levels[1][6][3] = 9;
    levels[1][6][4] = 13;
    levels[1][6][5] = 0;
    levels[1][6][6] = 0;
    levels[1][6][7] = 0;
    levels[1][6][8] = 0;
    levels[1][6][9] = 0;
    levels[1][6][10] = 0;
    levels[1][6][11] = 0;
    levels[1][6][12] = 0;
    levels[1][6][13] = 0;
    levels[1][6][14] = 0;
    levels[1][7][0] = 3;
    levels[1][7][1] = 7;
    levels[1][7][2] = 8;
    levels[1][7][3] = 12;
    levels[1][7][4] = 13;
    levels[1][7][5] = 14;
    levels[1][7][6] = 15;
    levels[1][7][7] = 0;
    levels[1][7][8] = 0;
    levels[1][7][9] = 0;
    levels[1][7][10] = 0;
    levels[1][7][11] = 0;
    levels[1][7][12] = 0;
    levels[1][7][13] = 0;
    levels[1][7][14] = 0;
    levels[1][8][0] = 4;
    levels[1][8][1] = 8;
    levels[1][8][2] = 12;
    levels[1][8][3] = 15;
    levels[1][8][4] = 0;
    levels[1][8][5] = 0;
    levels[1][8][6] = 0;
    levels[1][8][7] = 0;
    levels[1][8][8] = 0;
    levels[1][8][9] = 0;
    levels[1][8][10] = 0;
    levels[1][8][11] = 0;
    levels[1][8][12] = 0;
    levels[1][8][13] = 0;
    levels[1][8][14] = 0;
    levels[1][9][0] = 3;
    levels[1][9][1] = 5;
    levels[1][9][2] = 7;
    levels[1][9][3] = 8;
    levels[1][9][4] = 10;
    levels[1][9][5] = 11;
    levels[1][9][6] = 13;
    levels[1][9][7] = 0;
    levels[1][9][8] = 0;
    levels[1][9][9] = 0;
    levels[1][9][10] = 0;
    levels[1][9][11] = 0;
    levels[1][9][12] = 0;
    levels[1][9][13] = 0;
    levels[1][9][14] = 0;
    levels[1][10][0] = 3;
    levels[1][10][1] = 4;
    levels[1][10][2] = 7;
    levels[1][10][3] = 11;
    levels[1][10][4] = 14;
    levels[1][10][5] = 0;
    levels[1][10][6] = 0;
    levels[1][10][7] = 0;
    levels[1][10][8] = 0;
    levels[1][10][9] = 0;
    levels[1][10][10] = 0;
    levels[1][10][11] = 0;
    levels[1][10][12] = 0;
    levels[1][10][13] = 0;
    levels[1][10][14] = 0;
    levels[1][11][0] = 3;
    levels[1][11][1] = 7;
    levels[1][11][2] = 10;
    levels[1][11][3] = 13;
    levels[1][11][4] = 14;
    levels[1][11][5] = 0;
    levels[1][11][6] = 0;
    levels[1][11][7] = 0;
    levels[1][11][8] = 0;
    levels[1][11][9] = 0;
    levels[1][11][10] = 0;
    levels[1][11][11] = 0;
    levels[1][11][12] = 0;
    levels[1][11][13] = 0;
    levels[1][11][14] = 0;
    levels[1][12][0] = 4;
    levels[1][12][1] = 5;
    levels[1][12][2] = 8;
    levels[1][12][3] = 12;
    levels[1][12][4] = 15;
    levels[1][12][5] = 0;
    levels[1][12][6] = 0;
    levels[1][12][7] = 0;
    levels[1][12][8] = 0;
    levels[1][12][9] = 0;
    levels[1][12][10] = 0;
    levels[1][12][11] = 0;
    levels[1][12][12] = 0;
    levels[1][12][13] = 0;
    levels[1][12][14] = 0;
    levels[1][13][0] = 3;
    levels[1][13][1] = 6;
    levels[1][13][2] = 10;
    levels[1][13][3] = 11;
    levels[1][13][4] = 13;
    levels[1][13][5] = 14;
    levels[1][13][6] = 0;
    levels[1][13][7] = 0;
    levels[1][13][8] = 0;
    levels[1][13][9] = 0;
    levels[1][13][10] = 0;
    levels[1][13][11] = 0;
    levels[1][13][12] = 0;
    levels[1][13][13] = 0;
    levels[1][13][14] = 0;
    levels[1][14][0] = 3;
    levels[1][14][1] = 6;
    levels[1][14][2] = 9;
    levels[1][14][3] = 13;
    levels[1][14][4] = 15;
    levels[1][14][5] = 0;
    levels[1][14][6] = 0;
    levels[1][14][7] = 0;
    levels[1][14][8] = 0;
    levels[1][14][9] = 0;
    levels[1][14][10] = 0;
    levels[1][14][11] = 0;
    levels[1][14][12] = 0;
    levels[1][14][13] = 0;
    levels[1][14][14] = 0;
    levels[1][15][0] = 2;
    levels[1][15][1] = 3;
    levels[1][15][2] = 4;
    levels[1][15][3] = 5;
    levels[1][15][4] = 8;
    levels[1][15][5] = 12;
    levels[1][15][6] = 15;
    levels[1][15][7] = 0;
    levels[1][15][8] = 0;
    levels[1][15][9] = 0;
    levels[1][15][10] = 0;
    levels[1][15][11] = 0;
    levels[1][15][12] = 0;
    levels[1][15][13] = 0;
    levels[1][15][14] = 0;
    levels[2][1][0] = 2;
    levels[2][1][1] = 4;
    levels[2][1][2] = 7;
    levels[2][1][3] = 10;
    levels[2][1][4] = 11;
    levels[2][1][5] = 14;
    levels[2][1][6] = 15;
    levels[2][1][7] = 0;
    levels[2][1][8] = 0;
    levels[2][1][9] = 0;
    levels[2][1][10] = 0;
    levels[2][1][11] = 0;
    levels[2][1][12] = 0;
    levels[2][1][13] = 0;
    levels[2][1][14] = 0;
    levels[2][2][0] = 1;
    levels[2][2][1] = 2;
    levels[2][2][2] = 5;
    levels[2][2][3] = 8;
    levels[2][2][4] = 12;
    levels[2][2][5] = 15;
    levels[2][2][6] = 0;
    levels[2][2][7] = 0;
    levels[2][2][8] = 0;
    levels[2][2][9] = 0;
    levels[2][2][10] = 0;
    levels[2][2][11] = 0;
    levels[2][2][12] = 0;
    levels[2][2][13] = 0;
    levels[2][2][14] = 0;
    levels[2][3][0] = 1;
    levels[2][3][1] = 2;
    levels[2][3][2] = 5;
    levels[2][3][3] = 8;
    levels[2][3][4] = 11;
    levels[2][3][5] = 13;
    levels[2][3][6] = 0;
    levels[2][3][7] = 0;
    levels[2][3][8] = 0;
    levels[2][3][9] = 0;
    levels[2][3][10] = 0;
    levels[2][3][11] = 0;
    levels[2][3][12] = 0;
    levels[2][3][13] = 0;
    levels[2][3][14] = 0;
    levels[2][4][0] = 1;
    levels[2][4][1] = 4;
    levels[2][4][2] = 7;
    levels[2][4][3] = 8;
    levels[2][4][4] = 12;
    levels[2][4][5] = 13;
    levels[2][4][6] = 14;
    levels[2][4][7] = 0;
    levels[2][4][8] = 0;
    levels[2][4][9] = 0;
    levels[2][4][10] = 0;
    levels[2][4][11] = 0;
    levels[2][4][12] = 0;
    levels[2][4][13] = 0;
    levels[2][4][14] = 0;
    levels[2][5][0] = 2;
    levels[2][5][1] = 3;
    levels[2][5][2] = 6;
    levels[2][5][3] = 10;
    levels[2][5][4] = 14;
    levels[2][5][5] = 15;
    levels[2][5][6] = 0;
    levels[2][5][7] = 0;
    levels[2][5][8] = 0;
    levels[2][5][9] = 0;
    levels[2][5][10] = 0;
    levels[2][5][11] = 0;
    levels[2][5][12] = 0;
    levels[2][5][13] = 0;
    levels[2][5][14] = 0;
    levels[2][6][0] = 4;
    levels[2][6][1] = 7;
    levels[2][6][2] = 9;
    levels[2][6][3] = 13;
    levels[2][6][4] = 15;
    levels[2][6][5] = 0;
    levels[2][6][6] = 0;
    levels[2][6][7] = 0;
    levels[2][6][8] = 0;
    levels[2][6][9] = 0;
    levels[2][6][10] = 0;
    levels[2][6][11] = 0;
    levels[2][6][12] = 0;
    levels[2][6][13] = 0;
    levels[2][6][14] = 0;
    levels[2][7][0] = 3;
    levels[2][7][1] = 6;
    levels[2][7][2] = 7;
    levels[2][7][3] = 11;
    levels[2][7][4] = 14;
    levels[2][7][5] = 15;
    levels[2][7][6] = 0;
    levels[2][7][7] = 0;
    levels[2][7][8] = 0;
    levels[2][7][9] = 0;
    levels[2][7][10] = 0;
    levels[2][7][11] = 0;
    levels[2][7][12] = 0;
    levels[2][7][13] = 0;
    levels[2][7][14] = 0;
    levels[2][8][0] = 2;
    levels[2][8][1] = 3;
    levels[2][8][2] = 7;
    levels[2][8][3] = 9;
    levels[2][8][4] = 12;
    levels[2][8][5] = 14;
    levels[2][8][6] = 15;
    levels[2][8][7] = 0;
    levels[2][8][8] = 0;
    levels[2][8][9] = 0;
    levels[2][8][10] = 0;
    levels[2][8][11] = 0;
    levels[2][8][12] = 0;
    levels[2][8][13] = 0;
    levels[2][8][14] = 0;
    levels[2][9][0] = 2;
    levels[2][9][1] = 4;
    levels[2][9][2] = 8;
    levels[2][9][3] = 11;
    levels[2][9][4] = 14;
    levels[2][9][5] = 0;
    levels[2][9][6] = 0;
    levels[2][9][7] = 0;
    levels[2][9][8] = 0;
    levels[2][9][9] = 0;
    levels[2][9][10] = 0;
    levels[2][9][11] = 0;
    levels[2][9][12] = 0;
    levels[2][9][13] = 0;
    levels[2][9][14] = 0;
    levels[2][10][0] = 2;
    levels[2][10][1] = 4;
    levels[2][10][2] = 5;
    levels[2][10][3] = 8;
    levels[2][10][4] = 9;
    levels[2][10][5] = 12;
    levels[2][10][6] = 13;
    levels[2][10][7] = 14;
    levels[2][10][8] = 15;
    levels[2][10][9] = 0;
    levels[2][10][10] = 0;
    levels[2][10][11] = 0;
    levels[2][10][12] = 0;
    levels[2][10][13] = 0;
    levels[2][10][14] = 0;
    levels[2][11][0] = 3;
    levels[2][11][1] = 4;
    levels[2][11][2] = 5;
    levels[2][11][3] = 7;
    levels[2][11][4] = 11;
    levels[2][11][5] = 14;
    levels[2][11][6] = 0;
    levels[2][11][7] = 0;
    levels[2][11][8] = 0;
    levels[2][11][9] = 0;
    levels[2][11][10] = 0;
    levels[2][11][11] = 0;
    levels[2][11][12] = 0;
    levels[2][11][13] = 0;
    levels[2][11][14] = 0;
    levels[2][12][0] = 1;
    levels[2][12][1] = 4;
    levels[2][12][2] = 7;
    levels[2][12][3] = 9;
    levels[2][12][4] = 11;
    levels[2][12][5] = 12;
    levels[2][12][6] = 0;
    levels[2][12][7] = 0;
    levels[2][12][8] = 0;
    levels[2][12][9] = 0;
    levels[2][12][10] = 0;
    levels[2][12][11] = 0;
    levels[2][12][12] = 0;
    levels[2][12][13] = 0;
    levels[2][12][14] = 0;
    levels[2][13][0] = 3;
    levels[2][13][1] = 5;
    levels[2][13][2] = 7;
    levels[2][13][3] = 9;
    levels[2][13][4] = 10;
    levels[2][13][5] = 14;
    levels[2][13][6] = 0;
    levels[2][13][7] = 0;
    levels[2][13][8] = 0;
    levels[2][13][9] = 0;
    levels[2][13][10] = 0;
    levels[2][13][11] = 0;
    levels[2][13][12] = 0;
    levels[2][13][13] = 0;
    levels[2][13][14] = 0;
    levels[2][14][0] = 2;
    levels[2][14][1] = 3;
    levels[2][14][2] = 7;
    levels[2][14][3] = 8;
    levels[2][14][4] = 9;
    levels[2][14][5] = 11;
    levels[2][14][6] = 12;
    levels[2][14][7] = 13;
    levels[2][14][8] = 15;
    levels[2][14][9] = 0;
    levels[2][14][10] = 0;
    levels[2][14][11] = 0;
    levels[2][14][12] = 0;
    levels[2][14][13] = 0;
    levels[2][14][14] = 0;
    levels[2][15][0] = 4;
    levels[2][15][1] = 8;
    levels[2][15][2] = 9;
    levels[2][15][3] = 10;
    levels[2][15][4] = 13;
    levels[2][15][5] = 0;
    levels[2][15][6] = 0;
    levels[2][15][7] = 0;
    levels[2][15][8] = 0;
    levels[2][15][9] = 0;
    levels[2][15][10] = 0;
    levels[2][15][11] = 0;
    levels[2][15][12] = 0;
    levels[2][15][13] = 0;
    levels[2][15][14] = 0;
    levels[3][1][0] = 4;
    levels[3][1][1] = 7;
    levels[3][1][2] = 9;
    levels[3][1][3] = 12;
    levels[3][1][4] = 13;
    levels[3][1][5] = 15;
    levels[3][1][6] = 0;
    levels[3][1][7] = 0;
    levels[3][1][8] = 0;
    levels[3][1][9] = 0;
    levels[3][1][10] = 0;
    levels[3][1][11] = 0;
    levels[3][1][12] = 0;
    levels[3][1][13] = 0;
    levels[3][1][14] = 0;
    levels[3][2][0] = 4;
    levels[3][2][1] = 5;
    levels[3][2][2] = 9;
    levels[3][2][3] = 10;
    levels[3][2][4] = 13;
    levels[3][2][5] = 14;
    levels[3][2][6] = 0;
    levels[3][2][7] = 0;
    levels[3][2][8] = 0;
    levels[3][2][9] = 0;
    levels[3][2][10] = 0;
    levels[3][2][11] = 0;
    levels[3][2][12] = 0;
    levels[3][2][13] = 0;
    levels[3][2][14] = 0;
    levels[3][3][0] = 2;
    levels[3][3][1] = 4;
    levels[3][3][2] = 8;
    levels[3][3][3] = 9;
    levels[3][3][4] = 11;
    levels[3][3][5] = 12;
    levels[3][3][6] = 14;
    levels[3][3][7] = 0;
    levels[3][3][8] = 0;
    levels[3][3][9] = 0;
    levels[3][3][10] = 0;
    levels[3][3][11] = 0;
    levels[3][3][12] = 0;
    levels[3][3][13] = 0;
    levels[3][3][14] = 0;
    levels[3][4][0] = 1;
    levels[3][4][1] = 2;
    levels[3][4][2] = 4;
    levels[3][4][3] = 8;
    levels[3][4][4] = 12;
    levels[3][4][5] = 14;
    levels[3][4][6] = 15;
    levels[3][4][7] = 0;
    levels[3][4][8] = 0;
    levels[3][4][9] = 0;
    levels[3][4][10] = 0;
    levels[3][4][11] = 0;
    levels[3][4][12] = 0;
    levels[3][4][13] = 0;
    levels[3][4][14] = 0;
    levels[3][5][0] = 4;
    levels[3][5][1] = 8;
    levels[3][5][2] = 9;
    levels[3][5][3] = 10;
    levels[3][5][4] = 12;
    levels[3][5][5] = 13;
    levels[3][5][6] = 14;
    levels[3][5][7] = 0;
    levels[3][5][8] = 0;
    levels[3][5][9] = 0;
    levels[3][5][10] = 0;
    levels[3][5][11] = 0;
    levels[3][5][12] = 0;
    levels[3][5][13] = 0;
    levels[3][5][14] = 0;
    levels[3][6][0] = 1;
    levels[3][6][1] = 5;
    levels[3][6][2] = 9;
    levels[3][6][3] = 10;
    levels[3][6][4] = 12;
    levels[3][6][5] = 15;
    levels[3][6][6] = 0;
    levels[3][6][7] = 0;
    levels[3][6][8] = 0;
    levels[3][6][9] = 0;
    levels[3][6][10] = 0;
    levels[3][6][11] = 0;
    levels[3][6][12] = 0;
    levels[3][6][13] = 0;
    levels[3][6][14] = 0;
    levels[3][7][0] = 3;
    levels[3][7][1] = 7;
    levels[3][7][2] = 11;
    levels[3][7][3] = 14;
    levels[3][7][4] = 15;
    levels[3][7][5] = 0;
    levels[3][7][6] = 0;
    levels[3][7][7] = 0;
    levels[3][7][8] = 0;
    levels[3][7][9] = 0;
    levels[3][7][10] = 0;
    levels[3][7][11] = 0;
    levels[3][7][12] = 0;
    levels[3][7][13] = 0;
    levels[3][7][14] = 0;
    levels[3][8][0] = 4;
    levels[3][8][1] = 6;
    levels[3][8][2] = 7;
    levels[3][8][3] = 11;
    levels[3][8][4] = 14;
    levels[3][8][5] = 0;
    levels[3][8][6] = 0;
    levels[3][8][7] = 0;
    levels[3][8][8] = 0;
    levels[3][8][9] = 0;
    levels[3][8][10] = 0;
    levels[3][8][11] = 0;
    levels[3][8][12] = 0;
    levels[3][8][13] = 0;
    levels[3][8][14] = 0;
    levels[3][9][0] = 3;
    levels[3][9][1] = 7;
    levels[3][9][2] = 11;
    levels[3][9][3] = 12;
    levels[3][9][4] = 0;
    levels[3][9][5] = 0;
    levels[3][9][6] = 0;
    levels[3][9][7] = 0;
    levels[3][9][8] = 0;
    levels[3][9][9] = 0;
    levels[3][9][10] = 0;
    levels[3][9][11] = 0;
    levels[3][9][12] = 0;
    levels[3][9][13] = 0;
    levels[3][9][14] = 0;
    levels[3][10][0] = 4;
    levels[3][10][1] = 6;
    levels[3][10][2] = 10;
    levels[3][10][3] = 11;
    levels[3][10][4] = 13;
    levels[3][10][5] = 15;
    levels[3][10][6] = 0;
    levels[3][10][7] = 0;
    levels[3][10][8] = 0;
    levels[3][10][9] = 0;
    levels[3][10][10] = 0;
    levels[3][10][11] = 0;
    levels[3][10][12] = 0;
    levels[3][10][13] = 0;
    levels[3][10][14] = 0;
    levels[3][11][0] = 2;
    levels[3][11][1] = 4;
    levels[3][11][2] = 8;
    levels[3][11][3] = 11;
    levels[3][11][4] = 14;
    levels[3][11][5] = 0;
    levels[3][11][6] = 0;
    levels[3][11][7] = 0;
    levels[3][11][8] = 0;
    levels[3][11][9] = 0;
    levels[3][11][10] = 0;
    levels[3][11][11] = 0;
    levels[3][11][12] = 0;
    levels[3][11][13] = 0;
    levels[3][11][14] = 0;
    levels[3][12][0] = 3;
    levels[3][12][1] = 4;
    levels[3][12][2] = 6;
    levels[3][12][3] = 8;
    levels[3][12][4] = 11;
    levels[3][12][5] = 13;
    levels[3][12][6] = 0;
    levels[3][12][7] = 0;
    levels[3][12][8] = 0;
    levels[3][12][9] = 0;
    levels[3][12][10] = 0;
    levels[3][12][11] = 0;
    levels[3][12][12] = 0;
    levels[3][12][13] = 0;
    levels[3][12][14] = 0;
    levels[3][13][0] = 2;
    levels[3][13][1] = 6;
    levels[3][13][2] = 8;
    levels[3][13][3] = 9;
    levels[3][13][4] = 11;
    levels[3][13][5] = 12;
    levels[3][13][6] = 15;
    levels[3][13][7] = 0;
    levels[3][13][8] = 0;
    levels[3][13][9] = 0;
    levels[3][13][10] = 0;
    levels[3][13][11] = 0;
    levels[3][13][12] = 0;
    levels[3][13][13] = 0;
    levels[3][13][14] = 0;
    levels[3][14][0] = 1;
    levels[3][14][1] = 5;
    levels[3][14][2] = 6;
    levels[3][14][3] = 10;
    levels[3][14][4] = 11;
    levels[3][14][5] = 15;
    levels[3][14][6] = 0;
    levels[3][14][7] = 0;
    levels[3][14][8] = 0;
    levels[3][14][9] = 0;
    levels[3][14][10] = 0;
    levels[3][14][11] = 0;
    levels[3][14][12] = 0;
    levels[3][14][13] = 0;
    levels[3][14][14] = 0;
    levels[3][15][0] = 2;
    levels[3][15][1] = 4;
    levels[3][15][2] = 8;
    levels[3][15][3] = 12;
    levels[3][15][4] = 15;
    levels[3][15][5] = 0;
    levels[3][15][6] = 0;
    levels[3][15][7] = 0;
    levels[3][15][8] = 0;
    levels[3][15][9] = 0;
    levels[3][15][10] = 0;
    levels[3][15][11] = 0;
    levels[3][15][12] = 0;
    levels[3][15][13] = 0;
    levels[3][15][14] = 0;
    auto *thresholds = new double[no_thresholds + 1];
    for (int i = 0; i < no_thresholds; ++i) {
        thresholds[i + 1] = original_thresholds[i];
    }

    double *threshold_copy;

    threshold_copy = new double[no_thresholds + 1];
    double end_threshold = 1;

    for (int i = 0; i < no_levels; ++i) {
        for (int j = 1; j <= no_thresholds; ++j) {
            int count = 0;
            for (int k = 0; k < no_thresholds; ++k) {
                int index = levels[i][j][k];
                if (index != 0 && thresholds[index] != 0) {
                    ++count;
                    threshold_copy[j] += thresholds[index];
                }
            }
            if (count == 0) {
                threshold_copy[j] = 0;
            } else {
                threshold_copy[j] /= 1.0 * count;
            }
        }

        for (int j = 1; j <= no_thresholds; ++j) {
            thresholds[j] = threshold_copy[j];
            if (thresholds[j] != 0) {
                end_threshold = min(end_threshold, thresholds[j]);
            }
        }
    }
    if (end_threshold > 1) {
        end_threshold = 1;
    }
    return end_threshold;
}